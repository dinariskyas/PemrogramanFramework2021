{"ast":null,"code":"import { domainPath } from \"./Config\";\n\nconst GetAPI = path => {\n  //path digunakan untuk menunjuk alamat API yang akan di-request\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`) // alamat url domain + path untuk mengakses full alamat API yang di-request\n    .then(response => response.json()) // response dari server harus dijadikan json\n    .then(result => {\n      resolve(result); // jika success menerima response dari server maka resolve response ke user\n    }, err => {\n      reject(err); // jika terjadi error dari server (server down, dll)\n    } // maka kirim pesan error ke user melalui reject\n    );\n  });\n  return promise;\n};\n\n_c = GetAPI;\nexport default GetAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAPI\");","map":{"version":3,"sources":["C:/Users/ASUS/Pemrograman-Framework/minggu9/react-web/src/services/Get.js"],"names":["domainPath","GetAPI","path","promise","Promise","resolve","reject","fetch","then","response","json","result","err"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,CAAL,CAA+B;AAA/B,KACKM,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EACyC;AADzC,KAEKF,IAFL,CAEWG,MAAD,IAAY;AACVN,MAAAA,OAAO,CAACM,MAAD,CAAP,CADU,CACO;AACpB,KAJT,EAKSC,GAAD,IAAS;AACLN,MAAAA,MAAM,CAACM,GAAD,CAAN,CADK,CACQ;AAChB,KAPT,CAOU;AAPV;AASH,GAVe,CAAhB;AAWA,SAAOT,OAAP;AACH,CAdD;;KAAMF,M;AAgBN,eAAeA,MAAf","sourcesContent":["import { domainPath } from \"./Config\";\r\n\r\nconst GetAPI = (path) => {\r\n    //path digunakan untuk menunjuk alamat API yang akan di-request\r\n    const promise = new Promise((resolve, reject) => {\r\n        fetch(`${domainPath}/${path}`) // alamat url domain + path untuk mengakses full alamat API yang di-request\r\n            .then((response) => response.json()) // response dari server harus dijadikan json\r\n            .then((result) => {\r\n                    resolve(result); // jika success menerima response dari server maka resolve response ke user\r\n                },\r\n                (err) => {\r\n                    reject(err); // jika terjadi error dari server (server down, dll)\r\n                } // maka kirim pesan error ke user melalui reject\r\n            );\r\n    });\r\n    return promise;\r\n};\r\n\r\nexport default GetAPI;"]},"metadata":{},"sourceType":"module"}