{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\PemrogramanFramework2021\\\\minggu4\\\\react-web\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../component/BlogPost/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // komponen state dari React untuk stateful component\n      listArtikel: [] // variable array yang digunakan untuk menyimpan data API\n\n    };\n\n    this.handleHapusArtikel = data => {\n      // function yang meng-handle button action hapus data\n      fetch(`http://localhost:3001/posts/${data}`, {\n        method: 'DELETE'\n      }) // alamat URL API yang ingin kita HAPUS datanya\n      .then(res => {\n        // ketika proses hapus berhasil, maka ambil data dari server API lokal\n        this.ambilDataDariServerAPI();\n      });\n    };\n  }\n\n  ambilDataDariServerAPI() {\n    // fungsi untuk mengambil data dari API dengan penambahan sort dan order\n    fetch('http://localhost:3001/posts?_sort=id&_order=desc') // penambahan sort dan order berdasarkan parameter\n    .then(response => response.json()) // ubah response data dari URL API menjadi sebuah data JSON\n    .then(jsonHasilAmbilDariAPI => {\n      // data JSON hasil ambil dari API kita masukkan ke dalam listArtikel pada state\n      this.setState({\n        listArtikel: jsonHasilAmbilDariAPI\n      });\n    });\n  }\n\n  componentDidMount() {\n    // komponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\n    this.ambilDataDariServerAPI(); //  ambil data dari server API lokal\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-artikel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daftar Artikel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), this.state.listArtikel.map(artikel => {\n        // looping dan masukkan untuk setiap data yang ada di litsArtikel ke variabel artikel\n        return /*#__PURE__*/_jsxDEV(Post, {\n          judul: artikel.title,\n          isi: artikel.body,\n          idArtikel: artikel.id,\n          ha: true\n        }, artikel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 32\n        }, this); // mappingkan data json dari API sesuai dengan kategorinya\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["C:/Users/ASUS/PemrogramanFramework2021/minggu4/react-web/src/container/BlogPost/BlogPost.jsx"],"names":["React","Component","Post","BlogPost","state","listArtikel","handleHapusArtikel","data","fetch","method","then","res","ambilDataDariServerAPI","response","json","jsonHasilAmbilDariAPI","setState","componentDidMount","render","map","artikel","title","body","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AAAoB;AACxBC,MAAAA,WAAW,EAAE,EADT,CACoB;;AADpB,KADqB;;AAAA,SAmB7BC,kBAnB6B,GAmBPC,IAAD,IAAU;AAAG;AAC9BC,MAAAA,KAAK,CAAE,+BAA8BD,IAAK,EAArC,EAAwC;AAACE,QAAAA,MAAM,EAAE;AAAT,OAAxC,CAAL,CAAiE;AAAjE,OACKC,IADL,CACUC,GAAG,IAAI;AAAO;AAChB,aAAKC,sBAAL;AACH,OAHL;AAIH,KAxB4B;AAAA;;AAK7BA,EAAAA,sBAAsB,GAAG;AAAmB;AACxCJ,IAAAA,KAAK,CAAC,kDAAD,CAAL,CAA4D;AAA5D,KACKE,IADL,CACUG,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EACwC;AADxC,KAEKJ,IAFL,CAEUK,qBAAqB,IAAI;AAAK;AAChC,WAAKC,QAAL,CAAc;AACVX,QAAAA,WAAW,EAAEU;AADH,OAAd;AAGH,KANL;AAOH;;AAEDE,EAAAA,iBAAiB,GAAG;AAAI;AACpB,SAAKL,sBAAL,GADgB,CACe;AAClC;;AASDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQ,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2BC,OAAO,IAAI;AAAE;AACpC,4BAAO,QAAC,IAAD;AAAuB,UAAA,KAAK,EAAEA,OAAO,CAACC,KAAtC;AAA6C,UAAA,GAAG,EAAED,OAAO,CAACE,IAA1D;AAAgE,UAAA,SAAS,EAAEF,OAAO,CAACG,EAAnF;AAAuF,UAAA,EAAE;AAAzF,WAAWH,OAAO,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP,CADkC,CACiE;AACtG,OAFD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AArC4B;;AAyCjC,eAAepB,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport './BlogPost.css';\r\nimport Post from \"../../component/BlogPost/Post\"\r\n\r\nclass BlogPost extends Component {\r\n    state = {                   // komponen state dari React untuk stateful component\r\n        listArtikel: []         // variable array yang digunakan untuk menyimpan data API\r\n    }\r\n    \r\n    ambilDataDariServerAPI() {                  // fungsi untuk mengambil data dari API dengan penambahan sort dan order\r\n        fetch('http://localhost:3001/posts?_sort=id&_order=desc')   // penambahan sort dan order berdasarkan parameter\r\n            .then(response => response.json())  // ubah response data dari URL API menjadi sebuah data JSON\r\n            .then(jsonHasilAmbilDariAPI => {    // data JSON hasil ambil dari API kita masukkan ke dalam listArtikel pada state\r\n                this.setState({\r\n                    listArtikel: jsonHasilAmbilDariAPI\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {   // komponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\r\n        this.ambilDataDariServerAPI()  //  ambil data dari server API lokal\r\n    }\r\n\r\n    handleHapusArtikel = (data) => {  // function yang meng-handle button action hapus data\r\n        fetch(`http://localhost:3001/posts/${data}`, {method: 'DELETE'}) // alamat URL API yang ingin kita HAPUS datanya\r\n            .then(res => {      // ketika proses hapus berhasil, maka ambil data dari server API lokal\r\n                this.ambilDataDariServerAPI()  \r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"post-artikel\">\r\n                <h2>Daftar Artikel</h2>\r\n                {\r\n                    this.state.listArtikel.map(artikel => { // looping dan masukkan untuk setiap data yang ada di litsArtikel ke variabel artikel\r\n                        return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} ha/> // mappingkan data json dari API sesuai dengan kategorinya\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}