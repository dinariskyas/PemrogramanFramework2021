{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\PemrogramanFramework2021\\\\minggu4\\\\react-web-tugas\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport { Component } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../component/BlogPost/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // komponen state dari React untuk stateful component\n      listArtikel: [],\n      // variable array yang digunakan untuk menyimpan data API\n      insertArtikel: {\n        // variable yang digunakan untuk menampung sementara data yang akan di inserrt\n        userId: 1,\n        // kolom userId, id, title, dan body sama, mengikuti kolom yang ada pada listArtikel.json\n        id: 1,\n        title: \"\",\n        body: \"\"\n      }\n    };\n\n    this.handleHapusArtikel = data => {\n      // function yang meng-handle button action hapus data\n      fetch(`http://localhost:3001/posts/${data}`, {\n        method: 'DELETE'\n      }) // alamat URL API yang ingin kita HAPUS datanya\n      .then(res => {\n        // ketika proses hapus berhasil, maka ambil data dari server API lokal\n        this.ambilDataDariServerAPI();\n      });\n    };\n\n    this.handleTambahArtikel = event => {\n      // fungsi untuk meng-handle form tambag data artikel\n      let formInsertArtikel = { ...this.state.insertArtikel\n      }; // cloning data state insertArtikel ke dalam variable formInsertArtikel\n\n      let timestamp = new Date().getTime(); // digunakan untuk menyimpan watu (sebagai ID artikel)\n\n      formInsertArtikel['id'] = timestamp;\n      formInsertArtikel[event.target.name] = event.target.value; // menyimpan data onChange ke formInsertArtikel sesuai dengan target yang diisi\n\n      this.setState({\n        insertArtikel: formInsertArtikel\n      });\n    };\n\n    this.handleTombolSimpan = () => {\n      // fungsi untuk meng-handle tombol simpan\n      fetch('http://localhost:3001/posts', {\n        method: 'post',\n        // method POST untuk input/insert data\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.insertArtikel) // kirimkan ke body request untuk data yang akan ditambahkan (insert)\n\n      }).then(Response => {\n        this.ambilDataDariServerAPI(); // reload/refresh data\n      });\n    };\n  }\n\n  ambilDataDariServerAPI() {\n    // fungsi untuk mengambil data dari API dengan penambahan sort dan order\n    fetch('http://localhost:3001/posts?_sort=id&_order=desc') // penambahan sort dan order berdasarkan parameter\n    .then(response => response.json()) // ubah response data dari URL API menjadi sebuah data JSON\n    .then(jsonHasilAmbilDariAPI => {\n      // data JSON hasil ambil dari API kita masukkan ke dalam listArtikel pada state\n      this.setState({\n        listMahasiswa: jsonHasilAmbilDariAPI\n      });\n    });\n  }\n\n  componentDidMount() {\n    // komponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\n    this.ambilDataDariServerAPI(); //  ambil data dari server API lokal\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-artikel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form pb-2 border-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"Judul\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              name: \"title\",\n              onChange: this.handleTambahArtikel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"body\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"Isi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"body\",\n              name: \"body\",\n              rows: \"3\",\n              onChange: this.handleTambahArtikel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: this.handleTombolSimpan,\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daftar Artikel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), this.state.listArtikel.map(artikel => {\n        // looping dan masukkan untuk setiap data yang ada di listArtikel ke variable artikel\n        return /*#__PURE__*/_jsxDEV(Post, {\n          judul: artikel.title,\n          isi: artikel.body,\n          idArtikel: artikel.id,\n          hapusArtikel: this.handleHapusArtikel\n        }, artikel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 32\n        }, this); // mappingkan data JSON dari API sesuai dengan kategorinya\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["C:/Users/ASUS/PemrogramanFramework2021/minggu4/react-web-tugas/src/container/BlogPost/BlogPost.jsx"],"names":["Component","Post","BlogPost","state","listArtikel","insertArtikel","userId","id","title","body","handleHapusArtikel","data","fetch","method","then","res","ambilDataDariServerAPI","handleTambahArtikel","event","formInsertArtikel","timestamp","Date","getTime","target","name","value","setState","handleTombolSimpan","headers","JSON","stringify","Response","response","json","jsonHasilAmbilDariAPI","listMahasiswa","componentDidMount","render","map","artikel"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../component/BlogPost/Post\"\n\nclass BlogPost extends Component {\n    state = {                   // komponen state dari React untuk stateful component\n        listArtikel: [],         // variable array yang digunakan untuk menyimpan data API\n        insertArtikel: {        // variable yang digunakan untuk menampung sementara data yang akan di inserrt\n            userId: 1,          // kolom userId, id, title, dan body sama, mengikuti kolom yang ada pada listArtikel.json\n            id: 1,\n            title: \"\",\n            body: \"\"\n        }\n    }\n\n    ambilDataDariServerAPI() {                  // fungsi untuk mengambil data dari API dengan penambahan sort dan order\n        fetch('http://localhost:3001/posts?_sort=id&_order=desc')   // penambahan sort dan order berdasarkan parameter\n            .then(response => response.json())  // ubah response data dari URL API menjadi sebuah data JSON\n            .then(jsonHasilAmbilDariAPI => {    // data JSON hasil ambil dari API kita masukkan ke dalam listArtikel pada state\n                this.setState({\n                    listMahasiswa: jsonHasilAmbilDariAPI\n                })\n            })\n    }\n\n    componentDidMount() {   // komponen untuk mengecek ketika component telah di-mount-ing, maka panggil API\n        this.ambilDataDariServerAPI()  //  ambil data dari server API lokal\n    }\n\n    handleHapusArtikel = (data) => {  // function yang meng-handle button action hapus data\n        fetch(`http://localhost:3001/posts/${data}`, {method: 'DELETE'}) // alamat URL API yang ingin kita HAPUS datanya\n            .then(res => {      // ketika proses hapus berhasil, maka ambil data dari server API lokal\n                this.ambilDataDariServerAPI()  \n            })\n    }\n\n    handleTambahArtikel = (event) => {      // fungsi untuk meng-handle form tambag data artikel\n        let formInsertArtikel = {...this.state.insertArtikel};  // cloning data state insertArtikel ke dalam variable formInsertArtikel\n        let timestamp = new Date().getTime();       // digunakan untuk menyimpan watu (sebagai ID artikel)\n        formInsertArtikel['id'] = timestamp;\n        formInsertArtikel[event.target.name] = event.target.value;  // menyimpan data onChange ke formInsertArtikel sesuai dengan target yang diisi\n        this.setState({\n            insertArtikel: formInsertArtikel\n        });\n    }\n\n    handleTombolSimpan = () => {    // fungsi untuk meng-handle tombol simpan\n        fetch('http://localhost:3001/posts', {\n            method: 'post',         // method POST untuk input/insert data\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.insertArtikel)  // kirimkan ke body request untuk data yang akan ditambahkan (insert)\n        })\n            .then( (Response) => {\n                this.ambilDataDariServerAPI();      // reload/refresh data\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"post-artikel\">\n                <div className=\"form pb-2 border-bottom\">\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Judul</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={this.handleTambahArtikel}/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"body\" className=\"col-sm-2 col-form-label\">Isi</label>\n                        <div className=\"col-sm-10\">\n                            <textarea className=\"form-control\" id=\"body\" name=\"body\" rows=\"3\" onChange={this.handleTambahArtikel}></textarea>\n                        </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\n                </div>\n                <h2>Daftar Artikel</h2>\n                {\n                    this.state.listArtikel.map(artikel => {  // looping dan masukkan untuk setiap data yang ada di listArtikel ke variable artikel\n                        return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel}/>  // mappingkan data JSON dari API sesuai dengan kategorinya\n                    })\n                }\n            </div>\n        )\n    }   \n}\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}